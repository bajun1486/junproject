package com.example.hansei.mypage.controller;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.hansei.entity.HanUser;
import com.example.hansei.login.service.UserService;
import com.example.hansei.mypage.service.FavoriteBoardService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/favorites")
@RequiredArgsConstructor
public class FavoriteBoardController {

	private static final Logger logger = LoggerFactory.getLogger(FavoriteBoardController.class);
	
    private final FavoriteBoardService favoriteBoardService;

    @PostMapping("/{boardId}")
    public ResponseEntity<String> addFavorite(@AuthenticationPrincipal HanUser user,
                                              @PathVariable Long boardId) {
        if (user == null) {
        	logger.error("🚨 @AuthenticationPrincipal HanUser user is NULL! JWT가 파싱되지 않았음.");
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("인증 정보가 없습니다.");
        }

        logger.info("✅ 로그인한 사용자 ID: {}", user.getUserId());

        favoriteBoardService.addFavorite(user.getUserId(), boardId);
        return ResponseEntity.ok("즐겨찾기에 추가되었습니다.");
    }

    @DeleteMapping("/{boardId}")
    public ResponseEntity<String> removeFavorite(@PathVariable("user") HanUser user,
                                                 @PathVariable Long boardId) {
        favoriteBoardService.removeFavorite(user.getUserId(), boardId);
        return ResponseEntity.ok("즐겨찾기가 취소되었습니다.");
    }
}
